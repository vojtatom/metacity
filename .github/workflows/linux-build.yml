name: Linux-Build

# Run this workflow every time a new commit pushed to your repository
on: 
  push:
    tags:
      - '*'

jobs:
  # Set the job key. The key is displayed as the job name
  # when a job name is not provided
  linux-build:
    # Name the Job
    name: Build and release the source for linux
    # Set the type of machine to run on
    runs-on: ubuntu-latest

    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
      - name: Checkout repo
        uses: actions/checkout@v1

      - name: Setup node
        uses: actions/setup-node@v2-beta
        with:
          node-version: '12'

      - name: Install dependencies
        run: |
          npm install
          npm run package
      
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          directory: out/
          filename: 'linux-x64.zip'

      - name: Status update
        run: |
          ls out/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: true

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: out/linux-x64.zip
          asset_name: linux-x64.zip
          asset_content_type: application/zip

        




